worker_processes 1;

events {
    worker_connections 1024;
}

http {

    log_format main '$msec $status $request $request_time '
    '$http_referer $remote_addr [ $time_local ] '
    '$upstream_response_time $host $bytes_sent '
    '$request_length $upstream_addr';

    access_log logs/access.log main buffer=32k flush=1s;

    upstream remote_world {
        server 127.0.0.1:8080;
    }

    server {
        listen 8090;

        location /exec {
            content_by_lua '
            local cjson = require "cjson"
            local headers = {
                ["token"] = "662222165e216225df78fbbd47c9333",
                ["Last-Modified"] = "Fri, 12 May 2018 12:22:22 GMT",
            }
            ngx.var.my_headers = cjson.encode(headers)
            ngx.var.my_upstream = "remote_world"
            ngx.var.my_uri = "/world"
            ngx.exec("/upstream")
            ';
        }

        location /upstream {
            internal;

            set $my_headers $my_headers;
            set $my_upstream $my_upstream;
            set $my_uri $my_uri;
            proxy_pass http://$my_upstream$my_uri;

            header_filter_by_lua '
            local cjson = require "cjson"
            headers = cjson.decode(ngx.var.my_headers)
            for k, v in pairs(headers) do
            ngx.header[k] = v
            end
            ';
        }

        location /test_body_filter {
            echo hello world;
            echo hi yile;
            body_filter_by_lua '
            ngx.log(ngx.ERR,"ngx.arg[1]=",ngx.arg[1]," arg[2]=",ngx.arg[2])
            ngx.arg[1] = string.upper(ngx.arg[1])
            ';
        }
        location /body_filter_end {
            echo hello world;
            echo hiya globe;

            body_filter_by_lua '
            ngx.log(ngx.ERR,"ngx.arg[1]=",ngx.arg[1]," arg[2]=",ngx.arg[2])
            local chunk = ngx.arg[1]
            if string.match(chunk, "hello") then
            ngx.arg[2] = true -- new eof
            return
            end

            ngx.arg[1] = nil
            ';
        }

        location /log {
            # 简单响应
            echo "Hello World!";

            # 使用 log_by_lua_block 记录日志信息
            log_by_lua_block {
                ngx.log(ngx.ERR, "log_by_lua_block executed")
                ngx.log(ngx.ERR, "Client IP: " .. ngx.var.remote_addr)
                ngx.log(ngx.ERR, "Requested URI: " .. ngx.var.request_uri)
            }
        }
    }


    server {
        listen 8080;

        location /world {
            echo "hello world";
        }
    }
}